{"version":3,"file":"static/webpack/static/development/pages/user.js.80e310b5cc40615e504b.hot-update.js","sources":["webpack:///./pages/user.js"],"sourcesContent":["/* Third Party */\nimport React, { Component } from 'react'\nimport { Grid, Row, Col } from 'react-styled-flexboxgrid'\nimport styled from 'styled-components'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport Router from 'next/router'\nimport 'isomorphic-fetch'\n\nimport {\n    populateCurrentUser\n} from '../redux/modules/store'\nimport RepoCard from '../components/RepoCard'\n\n\nclass User extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            repos: []\n        }\n    }\n    static async getInitialProps({ store, pathname, asPath}) {\n        const { currentUser } = store.getState()\n        console.log(currentUser)\n        // make repos api call here\n        const urlRequest = currentUser.repos_url\n        await fetch(urlRequest)\n            .then(res => res.json())\n            .then(repos => {\n                console.log('repos: ', repos)\n                setState({\n                    repos: repos\n                })\n            })\n        return { pathname, asPath }\n    }\n\n    render () {\n        const {\n            props\n        } = this\n\n        const {\n            pathname,\n            asPath,\n            currentUser,\n            repos\n        } = props\n\n        console.log('currentUser: ', currentUser)\n        console.log('repos: ', this.state.repos)\n        return (\n            <Grid>\n                <Row>\n                    {/* { users && users.map((user, i) => {\n                        return (\n                            <PaddedCol xs={6} sm={4} md={3} lg={2} key={i}>\n                                <RepoCard\n                                    user={user}\n                                    cardClick={() => handleUserCardClick(user) }\n                                />\n                            </PaddedCol>\n                        )\n                    })} */}\n                </Row>\n            </Grid>\n        )\n    }\n}\n\nexport const mapStateToProps = (state) => {\n    return { ...state }\n}\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        \n    }\n}\n\nexport default connect(mapStateToProps)(User)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;;;;;;;;;;;;;AA9CA;AACA;AACA;AACA;AACA;;AACA;AACA;AAAA;AAEA;AACA;AACA;AADA;AAGA;AACA;;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAtBA;AACA;AAwDA;AACA;AACA;AAEA;AACA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}