{"version":3,"file":"static/webpack/static/development/pages/_app.js.2a073957bfdf09bb2c3c.hot-update.js","sources":["webpack:///./pages/home.js"],"sourcesContent":["/* Third Party */\nimport React, { Component } from 'react'\nimport { Grid, Row, Col } from 'react-styled-flexboxgrid'\nimport styled from 'styled-components'\nimport { bindActionCreators } from 'redux'\nimport { connect, Provider } from 'react-redux'\nimport withRedux from 'next-redux-wrapper'\nimport Router from 'next/router'\n\n/* First Party */\nimport Searchbar from '../components/Searchbar' \nimport UserCard from '../components/UserCard'\nimport RepoCard from '../components/RepoCard'\nimport { makeStore, updateSearchTerm } from '../redux/modules/store'\n\n\nconst githubToken = \"access_token=c1c6964129310b0daa090a19c4dfdeedda2bd7b2\";\n\nconst PaddedRow = styled(Row)`\n    padding: 2rem 0rem;\n`\nconst PaddedCol = styled(Col)`\n    padding: 0rem 1.5rem;\n`\n\nclass Home extends Component {\n\n    static getInitialProps({ store, pathname, query }) {\n        console.log('store: ', store)\n        const { searchTerm } = store.getState()\n        console.log('initial props searchTerm: ', searchTerm)\n        // console.log('initial searchterm: ', searchTerm)\n        return { pathname, searchTerm }\n    }\n\n    // constructor(props) {\n    //     super(props)\n    //     this.state = {\n    //         searchTerm: '',\n    //         users: [],\n    //         currentUser: {}\n    //     }\n    // }\n\n    handleSearchTermChange = (event) => {\n        console.log(event.target)\n        this.setState({\n            searchTerm: event.target.value\n        })\n    }\n\n    handleSearchbarSubmit = (searchTerm) => {\n        console.log('in handlesubmit: ', searchTerm)\n        let urlRequest = `https://api.github.com/search/users?q=${searchTerm}`\n        fetch(urlRequest)\n            .then(res => res.json())\n            .then(results => {\n                const users = results.items\n                this.setState({\n                    users: users\n                })\n            })\n    }\n\n    handleUserCardClick = (user) => {\n        console.log('in handleUserCardClick: ', user)\n        this.setState({\n            currentUser: user\n        })\n        Router.push({\n            pathname: '/user',\n            query: { name: user.login}\n        })\n        // make api request to repo url\n    }\n\n    render () {\n        // const { \n        //     searchTerm,\n        //     users\n        // } = this.state\n        const { \n            handleSearchTermChange,\n            handleSearchbarSubmit,\n            handleUserCardClick,\n            props\n        } = this\n\n        const {\n            searchTerm,\n            users,\n            updateSearchTerm\n        } = props\n\n        console.log('home search: ', searchTerm)\n        return (\n            <Grid>\n                <PaddedRow center='xs'>\n                    <Col xs={12} sm={8} md={6}>\n                        <Searchbar\n                            searchTerm={searchTerm}\n                            onChange={updateSearchTerm}\n                            onSubmit={handleSearchbarSubmit}\n                        />\n                    </Col>\n                </PaddedRow>\n                <Row>\n                    { users && users.map((user, i) => {\n                        return (\n                            <PaddedCol xs={6} sm={4} md={3} lg={2} key={i}>\n                                <UserCard\n                                    user={user}\n                                    cardClick={() => handleUserCardClick(user) }\n                                />\n                            </PaddedCol>\n                        )\n                    })}\n                </Row>\n            </Grid>\n        )\n    }\n\n}\n\nexport const mapStateToProps = ({ searchTerm }) => {\n    return { searchTerm }\n}\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        updateSearchTerm: bindActionCreators(updateSearchTerm, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAGA;AAEA;AAGA;AACA;AAGA;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAIA;;;AA7FA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAlBA;AACA;AAkGA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AADA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}